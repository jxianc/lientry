# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String
  errMsg: String
  success: Boolean!
}

type BaseResponse {
  errMsg: String
  success: Boolean!
}

input CreateLinkInput {
  description: String
  title: String!
  url: String!
}

input CreateTreeInput {
  description: String
  name: String!
}

type CreateTreeResponse {
  errMsg: String
  success: Boolean!
  tree: Tree
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EditLinksInput {
  creates: [CreateLinkInput!]
  removes: [RemoveLinkInput!]
  updates: [UpdateLinkInput!]
}

type EditLinksResponse {
  errMsg: String
  links: [Link!]
  success: Boolean!
}

type Link {
  createdAt: DateTime!
  description: String
  id: String!
  title: String!
  tree: Tree!
  updatedAt: DateTime!
  url: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  EditLinks(CURLinksInput: EditLinksInput!, treeId: String!): EditLinksResponse!
  createTree(createTreeInput: CreateTreeInput!): CreateTreeResponse!
  login(loginUserInput: LoginUserInput!): AuthResponse!
  refreshToken: AuthResponse!
  register(registerUserInput: RegisterUserInput!): AuthResponse!
  removeTree(treeId: String!): BaseResponse!
  updateTree(updateTreeInput: UpdateTreeInput!): UpdateTreeResponse!
}

type Provider {
  id: String!
  providerId: String!
  providerName: String!
  user: User!
}

type Query {
  getTreeById(treeId: String!): Tree!
  greeting: String!
  me: User!
}

input RegisterUserInput {
  email: String!
  name: String
  password: String!
}

input RemoveLinkInput {
  linkId: String!
}

type Tree {
  createdAt: DateTime!
  description: String
  id: String!
  links: [Link!]
  name: String!
  updatedAt: DateTime!
  user: User!
  viewed: Float!
}

input UpdateLinkInput {
  description: String
  linkId: String!
  title: String
  url: String
}

input UpdateTreeInput {
  description: String
  name: String
  treeId: String!
}

type UpdateTreeResponse {
  errMsg: String
  success: Boolean!
  tree: Tree
}

type User {
  createdAt: DateTime!
  email: String
  id: String!
  image: String
  name: String
  provider: Provider
  trees: [Tree!]
  updatedAt: DateTime!
}